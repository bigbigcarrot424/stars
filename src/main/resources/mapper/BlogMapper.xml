<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fangshuo.stars.mapper.BlogMapper">

    <select id="followBlogList" parameterType="java.util.List" resultType="com.fangshuo.stars.resp.BlogListResp">
        select t1.`id` id, `author_id` authorId, `name` authorName, `publish_time` publishTime, `content`, `vote_num` voteNum, `oppose_num` opposeNum, `comment_num` commentNum, t2.`avatar` avatar
        from `blog` t1, `user` t2 where t1.author_id = t2.id and author_id in
        <foreach collection="listParam" item="user" open=" (" separator="," close=")">
            #{user.id}
        </foreach>
        order by t1.publish_time desc
    </select>


    <select id="getBlogList" resultType="com.fangshuo.stars.resp.BlogListResp">
        select t1.`id` id, `author_id` authorId, `name` authorName, `publish_time` publishTime, `content`, `vote_num` voteNum, `oppose_num` opposeNum, `comment_num` commentNum, t2.`avatar` avatar
        from `blog` t1, `user` t2 where t1.author_id = t2.id order by t1.publish_time desc
    </select>

    <select id="getMyBlogList" resultType="com.fangshuo.stars.resp.BlogListResp">
        select t1.`id` id, `author_id` authorId, `name` authorName, `publish_time` publishTime, `content`, `vote_num` voteNum, `oppose_num` opposeNum, `comment_num` commentNum, t2.`avatar` avatar
        from `blog` t1, `user` t2 where t1.author_id = t2.id and t1.author_id = #{id} order by t1.publish_time desc
    </select>

    <select id="save" parameterType="com.fangshuo.stars.domain.Blog">
        insert into blog(`id`, `author_id`, `publish_time`, `content`, `vote_num`)
        values (#{id}, #{authorId}, #{publishTime}, #{content}, #{voteNum});
    </select>

    <update id="increaseComment">
        update blog set comment_num = comment_num + 1 where id = #{id};
    </update>

    <select id="getBlogById" resultType="com.fangshuo.stars.resp.BlogListResp">
        select t1.`id` id, `author_id` authorId, `name` authorName, `publish_time` publishTime, `content`, `vote_num` voteNum, `oppose_num` opposeNum, `comment_num` commentNum, t2.`avatar` avatar
        from `blog` t1, `user` t2 where t1.author_id = t2.id and t1.id = #{id}
    </select>

    <update id="editBlogById">
        update blog set content = #{content} where id = #{id};
    </update>

    <delete id="deleteById">
        delete from blog where id = #{blogId}
    </delete>

</mapper>
